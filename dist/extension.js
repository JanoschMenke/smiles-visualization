(()=>{"use strict";var e={265:function(e,n,t){var i,o=this&&this.__createBinding||(Object.create?function(e,n,t,i){void 0===i&&(i=t);var o=Object.getOwnPropertyDescriptor(n,t);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[t]}}),Object.defineProperty(e,i,o)}:function(e,n,t,i){void 0===i&&(i=t),e[i]=n[t]}),r=this&&this.__setModuleDefault||(Object.create?function(e,n){Object.defineProperty(e,"default",{enumerable:!0,value:n})}:function(e,n){e.default=n}),s=this&&this.__importStar||(i=function(e){return i=Object.getOwnPropertyNames||function(e){var n=[];for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[n.length]=t);return n},i(e)},function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t=i(e),s=0;s<t.length;s++)"default"!==t[s]&&o(n,e,t[s]);return r(n,e),n});Object.defineProperty(n,"__esModule",{value:!0}),n.activate=function(e){console.log("RDKit Molecule Viewer extension is now active"),c=l.window.createTextEditorDecorationType({backgroundColor:"rgba(100, 200, 255, 0.1)",border:"1px solid rgba(100, 200, 255, 0.5)"});let n=l.commands.registerCommand("rdkit-viewer.showMolecule",(()=>{const n=l.window.activeTextEditor;if(!n)return;const t=n.selection;if(t.isEmpty)return;const i=n.document.getText(t);u(i)?d(e.extensionUri,i,n):l.window.showInformationMessage("Selected text is not a valid SMILES string.")}));l.languages.registerHoverProvider({pattern:"**/*"},{provideHover(e,n,t){const i=e.getWordRangeAtPosition(n,/[A-Za-z][A-Za-z0-9@+\-\[\]\(\)\\\/%.=#]*/g)||e.getWordRangeAtPosition(n,/\S+/);if(!i)return null;const o=e.getText(i);return u(o)?(l.Uri.parse(`command:rdkit-viewer.showSmilesFromHover?${encodeURIComponent(JSON.stringify([o]))}`),l.commands.executeCommand("rdkit-viewer.showSmilesFromHover",o),null):null}}),e.subscriptions.push(l.commands.registerCommand("rdkit-viewer.showSmilesFromHover",(n=>{const t=l.window.activeTextEditor;t&&d(e.extensionUri,n,t,t.selection)}))),l.window.onDidChangeTextEditorSelection((n=>{const t=n.textEditor,i=t.selection;if(t.setDecorations(c,[]),i.isEmpty)return void(a&&(a.dispose(),a=void 0));const o=t.document.getText(i);u(o)?(t.setDecorations(c,[i]),d(e.extensionUri,o,t)):a&&(a.dispose(),a=void 0)})),e.subscriptions.push(n)},n.validateSmiles=u,n.deactivate=function(){a&&a.dispose()};const l=s(t(398));let c,a;function d(e,n,t,i){t.selection.active,t.visibleRanges[0].start,a||(a=l.window.createWebviewPanel("rdkitMoleculeViewer","Molecule Viewer",{viewColumn:l.ViewColumn.Beside,preserveFocus:!0},{enableScripts:!0,localResourceRoots:[e]}),a.onDidDispose((()=>{a=void 0})));const o=l.Uri.joinPath(e,"dist","rdkit","RDKit_minimal.js"),r=a.webview.asWebviewUri(o);a.webview.html=function(e,n){return`<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>RDKit Molecule Viewer</title>\n    <style>\n        body {\n            padding: 0;\n            margin: 0;\n            background-color: transparent;\n        }\n        .container {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 10px;\n        }\n        #molecule-display {\n            width: 300px;\n            height: 250px;\n            border: 1px solid #ccc;\n            margin-bottom: 10px;\n            background-color: white;\n        }\n        .smiles-text {\n            font-family: monospace;\n            margin-bottom: 10px;\n            word-break: break-all;\n        }\n    </style>\n</head>\n<body>\n    <div class="container">\n        <div id="molecule-display"></div>\n        <div class="smiles-text">${e}</div>\n    </div>\n\n    <script src="${n}"><\/script>\n    <script>\n        // Initialize RDKit\n        window.onload = async function() {\n            // Initialize RDKit\n            try {\n                const RDKit = await window.initRDKitModule();\n                const smiles = '${e.replace(/'/g,"\\'")}';\n                console.log('SMILES string:', smiles);\n                // Create molecule from SMILES\n                const mol = RDKit.get_mol(smiles);\n                \n                if (mol) {\n                    // Generate SVG and display molecule\n                    const svg = mol.get_svg(300, 250);\n                    document.getElementById('molecule-display').innerHTML = svg;\n                    \n                    // Clean up\n                    mol.delete();\n                } else {\n                    document.getElementById('molecule-display').innerHTML = \n                        '<div style="color: red; text-align: center; padding-top: 100px;">Invalid SMILES string</div>';\n                }\n            } catch (error) {\n                console.error('Error initializing RDKit:', error);\n                document.getElementById('molecule-display').innerHTML = \n                    '<div style="color: red; text-align: center; padding-top: 100px;">Error loading RDKit</div>';\n            }\n        };\n    <\/script>\n</body>\n</html>`}(n,r.toString())}function u(e){return/^([^J](?:B(?:r)[0-9BCOHNSOPIF@+\-\[\]\(\)\\\/%=#$]{2,}|[0-9COHNSOPIF@+\-\[\]\(\)\\\/%=#$]{3,}))$/gi.test(e.trim())}},398:e=>{e.exports=require("vscode")}},n={},t=function t(i){var o=n[i];if(void 0!==o)return o.exports;var r=n[i]={exports:{}};return e[i].call(r.exports,r,r.exports,t),r.exports}(265);module.exports=t})();